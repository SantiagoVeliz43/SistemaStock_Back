generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
  runtime  = "bun"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Medico {
  cedula_med   Int        @id
  nombre       String     @db.VarChar(15)
  apellido     String     @db.VarChar(15)
  especialidad Especiliad

  recetas Receta[]

  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)

  @@index([cedula_med])
  @@map("Medicos")
}

enum Especiliad {
  CLINICO
  CIRUJANO
  PEDIATRA
  PSQUIATRA
}

model Paciente {
  nro_legajo Int      @id
  nombre     String   @db.VarChar(15)
  apellido   String   @db.VarChar(15)
  dni        Int      @unique
  fechaNac   DateTime
  telefono   String?  @db.VarChar(15)
  obraSocial String   @db.VarChar(50)
  direccion  String?  @db.VarChar(50)

  recetas Receta[]

  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)

  @@index([nro_legajo])
  @@map("Pacientes")
}

model Farmaceutico {
  cedula_farma Int    @id
  nombre       String @db.VarChar(15)
  apellido     String @db.VarChar(15)
  clave_acceso Int    @unique

  computadoras ComputadoraGeneral[]

  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)

  @@index([clave_acceso])
  @@map("Farmaceuticos")
}

model Producto {
  id          Int               @id @default(autoincrement())
  nombre      String
  descripcion String
  stock       Int
  categProd   CategoriaProducto

  recetas RecetaProducto[]

  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)

  @@index([id])
  @@map("Productos")
}

enum CategoriaProducto {
  INYECTABLE
  JARABE
  PILDORA
  SUPOSITORIO
  OVULO
  CREMA
  GOTA
  SPRAYS
}

model Receta {
  nro_receta        String               @id
  medicoCedula      Int
  pacienteNroLegajo Int
  medico            Medico               @relation(fields: [medicoCedula], references: [cedula_med])
  paciente          Paciente             @relation(fields: [pacienteNroLegajo], references: [nro_legajo])
  productos         RecetaProducto[]
  computadoras      ComputadoraGeneral[]

  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)

  @@index([nro_receta])
  @@map("Recetas")
}

model RecetaProducto {
  id_receta_prod    Int      @id @default(autoincrement())
  fecha_emision     DateTime
  fecha_vencimiento DateTime
  dosificacion      String
  cantidad          Int
  recetaNroReceta   String
  productoId        Int

  receta   Receta   @relation(fields: [recetaNroReceta], references: [nro_receta])
  producto Producto @relation(fields: [productoId], references: [id])

  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)

  @@index([id_receta_prod])
  @@map("RecetaProductos")
}

model User {
  id       String @id @default(uuid()) @db.Uuid
  email    String @unique
  fullName String
  password String
  role     Role   @default(USER)

  createdAt DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt DateTime? @updatedAt @db.Timestamptz(3)
  deletedAt DateTime? @db.Timestamptz(3)

  @@index([id, email])
  @@map("Users")
}
